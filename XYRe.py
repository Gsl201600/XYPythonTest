import re

# 匹配通用字符
# \w 任意字母，数字，下划线
# \W 相反
# \d 十进制数字
# \D 除十进制数字以外的值
# \s 空白字符
# \S 非空白字符

# 匹配数字，英文，中文
# 数字[0-9]
# 英文[a-z][A-Z]
# 中文[\u4e00-\u9fa5]

# 元字符
# . 匹配除\n之外的任意字符
# ^ 匹配字符串开始位置
# $ 匹配字符串结束位置
# * 重复0次或多次前面的原子
# + 重复一次或多次前面的原子
# ? 重复0次或一次前面的原子

# 对于 ? 总结
# 1.如果数量词后面有 ?，该 ? 代表非贪婪模式的关键字，倾向于匹配最小长度
# 2.如果字符后面有 ?，该 ? 代表匹配前面字符0次或1次

# 匹配固定次数
# {n}前面的原子出现了n次
# {n,}至少出现n次
# {n, m}出现n-m次

b = "张三,,,李四,,,,,,王五"
pat = re.compile(",+")
result = pat.split(b)
print(result)

strr = "hello 123,hello 456"
pat2 = re.compile("\d+")
reslut2 = pat2.sub("666", strr)
print(reslut2)